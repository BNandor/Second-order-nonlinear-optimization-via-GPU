//////////// THIS FILE MUST BE CREATED BY EXECUTING WriteAttributeDefinitionFile ////////////
//////////// DO NOT MODIFY THIS FILE MANUALLY ///////////////////////////////////////////////

#ifndef __NOMAD_4_3_RUNATTRIBUTESDEFINITIONQUADMODEL__
#define __NOMAD_4_3_RUNATTRIBUTESDEFINITIONQUADMODEL__

_definition = {
{ "QUAD_MODEL_SEARCH",  "bool",  "true",  " Quad model search ",  " \n  \n . MADS model search, using Bastien Talgorn's Sgtelib with quad models \n  \n . Argument: one boolean ('yes' or 'no') \n  \n . Disabled for more than 50 variables \n  \n . Example: QUAD_MODEL_SEARCH yes \n  \n . Default: true\n\n",  "  basic mads quad model search model_search  "  , "true" , "true" , "true" },
{ "QUAD_MODEL_SEARCH_BOUND_REDUCTION_FACTOR",  "NOMAD::Double",  "1",  " Scale the bounds for the quad model search  ",  " \n  \n . The quad model is built on evaluation points around a frame center. This \n defines min and max bounds, from which we define a model center. The model \n search is limited to tighter (can be wider with the parameter set to less than 1) \n bounds by reducing the distance of the optimization bounds to the model center. \n We use a reduction factor for that. If the reduction factor equals one, the min \n and max bounds are used as optimization bounds for the search. The greater the \n reduction factor, the tighter the bounds. \n  \n . Argument: one Double greater than 0 \n  \n . Example: QUAD_MODEL_SEARCH_BOUND_REDUCTION_FACTOR 3.0 \n  \n . Default: 1\n\n",  "  develop mads quad model search sgtelib model_search bounds  "  , "true" , "true" , "true" },
{ "QUAD_MODEL_DISPLAY",  "std::string",  "",  " Display of a model ",  " \n . Control the display of the quad model search and quad model optimization. \n   These details are only shown if DISPLAY_DEGREE is FULL (3) or more. \n  \n . Arguments: a string containing one or several of the following letters \n  \n . \"S\": General information on the model search or optimization \n  \n . \"F\": Details of the filter step \n  \n . \"O\": Details of the models optimization \n  \n . \"P\": Details of the projection \n  \n . \"U\": Details of the model update \n  \n . \"I\": Advancement of the model optimization \n  \n . \"X\": Display of all of the model evaluations \n  \n . Example: QUAD_MODEL_DISPLAY SPF # display the general information on the search \n                                        and on the filter and projection steps \n . Default: Empty string.\n\n",  "  developer advanced model quad sgtelib  "  , "false" , "false" , "true" },
{ "QUAD_MODEL_OPTIMIZATION",  "bool",  "false",  " Quad model stand alone optimization for constrained and unconstrained pbs ",  " \n  \n . Quadratic model optimization for constrained and unconstrained \n   optimization \n  \n . Argument: bool \n  \n . Stand alone quadratic model optimization will deactivate any optimization \n   strategy. \n  \n . Example: QUAD_MODEL_OPTIMIZATION true \n  \n . Default: false\n\n",  "  advanced sgtelib quadratic quad optimization simplex  "  , "true" , "false" , "true" },
{ "QUAD_MODEL_SEARCH_BOX_FACTOR",  "NOMAD::Double",  "4.0",  " Quadratic model search point selection factor ",  " \n . Quadratic model search point selection factor \n  \n . This parameter is used to select points to build the quadratic model for \n   the search method \n  \n . The max, min and average of trial points coordinates are used to identify a \n   box. This box contains all trial points to sort. \n    \n . The box is enlarged by this factor. Cache evaluation points inside this box \n   are selected to build the quadratic model for search. \n  \n . Arguments: one strictly positive real \n  \n . Example: QUAD_MODEL_SEARCH_BOX_FACTOR 1.0 \n . Default: 4.0\n\n",  "  developer quadratic model search radius  "  , "true" , "true" , "true" },
{ "QUAD_MODEL_SORT_BOX_FACTOR",  "NOMAD::Double",  "2.0",  " Quadratic model sort point selection factor ",  " \n . Quadratic model sort point selection factor \n  \n . This parameter is used to select points to build the quadratic model for \n   sorting trial points \n  \n . The max, min and average of trial points coordinates are used to identify a \n   box. This box contains all trial points to sort. \n    \n . The box is enlarged by this factor. Cache evaluation points inside this box \n   are selected to build the quadratic model for sort. \n  \n . Arguments: one strictly positive real \n  \n . Example: QUAD_MODEL_SORT_BOX_FACTOR 1.0 \n . Default: 2.0\n\n",  "  developer quadratic model sort  "  , "true" , "true" , "true" } };

#endif
